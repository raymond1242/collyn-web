/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API for the project.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderCreate
 */
export interface OrderCreate {
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    product?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    price?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    advancePayment?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    discount?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    pendingPayment?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    registrationPlace: string;
    /**
     * 
     * @type {string}
     * @memberof OrderCreate
     */
    shippingPlace: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderCreate
     */
    shippingDate: Date;
    /**
     * 
     * @type {boolean}
     * @memberof OrderCreate
     */
    hasProduction?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrderCreate
     */
    delivered?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof OrderCreate
     */
    images: Array<string>;
}

export function OrderCreateFromJSON(json: any): OrderCreate {
    return OrderCreateFromJSONTyped(json, false);
}

export function OrderCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderCreate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'product': !exists(json, 'product') ? undefined : json['product'],
        'description': json['description'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'advancePayment': !exists(json, 'advance_payment') ? undefined : json['advance_payment'],
        'discount': !exists(json, 'discount') ? undefined : json['discount'],
        'pendingPayment': !exists(json, 'pending_payment') ? undefined : json['pending_payment'],
        'registrationPlace': json['registration_place'],
        'shippingPlace': json['shipping_place'],
        'shippingDate': (new Date(json['shipping_date'])),
        'hasProduction': !exists(json, 'has_production') ? undefined : json['has_production'],
        'delivered': !exists(json, 'delivered') ? undefined : json['delivered'],
        'images': json['images'],
    };
}

export function OrderCreateToJSON(value?: OrderCreate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'product': value.product,
        'description': value.description,
        'price': value.price,
        'advance_payment': value.advancePayment,
        'discount': value.discount,
        'pending_payment': value.pendingPayment,
        'registration_place': value.registrationPlace,
        'shipping_place': value.shippingPlace,
        'shipping_date': (value.shippingDate.toISOString()),
        'has_production': value.hasProduction,
        'delivered': value.delivered,
        'images': value.images,
    };
}


