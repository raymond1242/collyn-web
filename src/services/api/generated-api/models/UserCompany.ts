/* tslint:disable */
/* eslint-disable */
/**
 * API
 * API for the project.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Company,
    CompanyFromJSON,
    CompanyFromJSONTyped,
    CompanyToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserCompany
 */
export interface UserCompany {
    /**
     * 
     * @type {string}
     * @memberof UserCompany
     */
    name: string;
    /**
     * 
     * @type {Company}
     * @memberof UserCompany
     */
    company: Company;
    /**
     * 
     * @type {string}
     * @memberof UserCompany
     */
    role?: UserCompanyRoleEnum;
}

/**
* @export
* @enum {string}
*/
export enum UserCompanyRoleEnum {
    Store = 'STORE',
    Admin = 'ADMIN'
}

export function UserCompanyFromJSON(json: any): UserCompany {
    return UserCompanyFromJSONTyped(json, false);
}

export function UserCompanyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCompany {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'company': CompanyFromJSON(json['company']),
        'role': !exists(json, 'role') ? undefined : json['role'],
    };
}

export function UserCompanyToJSON(value?: UserCompany | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'company': CompanyToJSON(value.company),
        'role': value.role,
    };
}


